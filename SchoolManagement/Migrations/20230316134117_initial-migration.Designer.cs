// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagement.Data;

#nullable disable

namespace SchoolManagement.Migrations
{
    [DbContext(typeof(SchoolAppDbContext))]
    [Migration("20230316134117_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolManagement.Models.People", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfessorClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorClassId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4502),
                            Email = "email1@email.com",
                            Firstname = "Carla",
                            Lastname = "Santos",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4492)
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4504),
                            Email = "email2@email.com",
                            Firstname = "James",
                            Lastname = "Nobina",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4503)
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4506),
                            Email = "email3@email.com",
                            Firstname = "Matt",
                            Lastname = "Mathew",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4505)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4509),
                            Email = "email4@email.com",
                            Firstname = "Katt",
                            Lastname = "Nevib",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4508)
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4511),
                            Email = "email5@email.com",
                            Firstname = "Sue",
                            Lastname = "Chesdy",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4510)
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4513),
                            Email = "email6@email.com",
                            Firstname = "Paul",
                            Lastname = "Juan",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4512)
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4515),
                            Email = "email7@email.com",
                            Firstname = "Jim",
                            Lastname = "Greg",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4514)
                        });
                });

            modelBuilder.Entity("SchoolManagement.Models.ProfessorClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessorClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4691),
                            ProfessorId = 10,
                            StudentId = 1,
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4690)
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4693),
                            ProfessorId = 10,
                            StudentId = 11,
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4692)
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4695),
                            ProfessorId = 10,
                            StudentId = 14,
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4694)
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 1,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4697),
                            ProfessorId = 10,
                            StudentId = 5,
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4696)
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 1,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4699),
                            ProfessorId = 10,
                            StudentId = 12,
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4698)
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 2,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4701),
                            ProfessorId = 11,
                            StudentId = 10,
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4700)
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4703),
                            ProfessorId = 11,
                            StudentId = 1,
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4702)
                        });
                });

            modelBuilder.Entity("SchoolManagement.Models.SubjectClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4668),
                            Description = "English Vocabulary",
                            Name = "English",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4667)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4670),
                            Description = "Mathematics",
                            Name = "Calculus",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4669)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4672),
                            Description = "ARTS",
                            Name = "Music",
                            UpdatedDate = new DateTime(2023, 3, 16, 21, 41, 17, 25, DateTimeKind.Local).AddTicks(4671)
                        });
                });

            modelBuilder.Entity("SchoolManagement.Models.People", b =>
                {
                    b.HasOne("SchoolManagement.Models.ProfessorClass", null)
                        .WithMany("Students")
                        .HasForeignKey("ProfessorClassId");
                });

            modelBuilder.Entity("SchoolManagement.Models.ProfessorClass", b =>
                {
                    b.HasOne("SchoolManagement.Models.People", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("SchoolManagement.Models.ProfessorClass", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
